---
- name: Check grafana availability
  uri:
    url: "https://{{ grafana_public_cluster_address }}"
  register: _grafana_ping
  until: _grafana_ping.status == 200
  retries: 30
  delay: 10
  delegate_to: localhost
  become: false
  run_once: true

- block:
  - set_fact:
      grafana_password: "{{ lookup('ansible.builtin.password', '/dev/null length=8 chars=ascii_letters,digits,punctuation') }}"
    when: 
      - grafana_password is not defined

  - name: Set admin password
    uri:
      method: PUT
      url: "https://{{ grafana_public_cluster_address }}/api/user/password"
      body_format: json
      body: 
        oldPassword: "admin"
        newPassword: "{{ grafana_password }}"
        confirmNew: "{{ grafana_password }}"
      headers:
        Content-Type: application/json
        Accept: application/json
      user: admin
      password: admin
      force_basic_auth: true
      return_content: true
      status_code: 200
    when:
      - grafana_key is not defined

  - name: Create service account
    uri:
      method: POST
      url: "https://{{ grafana_public_cluster_address }}/api/serviceaccounts"
      body_format: json
      body: 
        name: "admin"
        role: "Admin"
        isDisabled: false
      headers:
        Content-Type: application/json
        Accept: application/json
      user: admin
      password: "{{ grafana_password }}"
      force_basic_auth: true
      return_content: true
      status_code: 201
    register: result
    when:
      - grafana_key is not defined 

  - name: Create service account token
    uri:
      method: POST
      url: "https://{{ grafana_public_cluster_address }}/api/serviceaccounts/{{ result.json.id }}/tokens"
      body_format: json 
      body: 
        name: "admin"
        role": "Admin"
      headers:
        Content-Type: application/json
        Accept: application/json
      user: admin
      password: "{{ grafana_password }}"
      force_basic_auth: true
      return_content: true
      status_code: 200
    register: result
    when:
      - grafana_key is not defined 

  - set_fact:
      grafana_key: "{{ result.json.key | trim() }}"
    when:
      - grafana_key is not defined 
         
  - name: Copy terraform sources    # noqa risky-file-permissions
    copy:
      src: "{{ role_path }}/files/terraform/"
      dest: "{{ tf_module_dest }}"
    when: tf_action == 'apply'

  - name: COMMON - Do Terraform
    community.general.terraform:
      project_path: "{{ tf_module_dest }}"
      state: "{{ (tf_action == 'destroy') | ternary('absent', 'present') }}"
      force_init: true
      workspace: "{{ hs_workspace }}"
      provider_upgrade: true
      backend_config:
        address: "{{ consul_public_cluster_address }}"
        path: "terraform/states/{{ tf_module_name }}"
      variables:
        grafana_url: "https://{{ grafana_public_cluster_address }}"
        grafana_auth: "{{ grafana_key }}"
    register: tf_result
    tags: tf

  - name: 
    copy:
      dest: "{{ hs_workspace_group_vars_dir }}/secrets/grafana.yml"
      content: |-
        ---
        grafana_key: "{{ grafana_key }}"
        grafana_password: "{{ grafana_password }}"

  delegate_to: localhost
  become: false
